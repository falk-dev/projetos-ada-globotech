import os, sys

os.system("cls" if os.name == "nt" else "clear")
sys.stdout.reconfigure(encoding="utf-8")  # Corrige acentua√ß√£o no terminal Windows
from src.limpeza import pipeline_limpeza
from src.estrutura import estruturar_dados
from src.metricas import (
    total_interacoes_por_conteudo,
    contagem_por_tipo,
    tempo_total_visualizacao,
    media_tempo_visualizacao,
    top5_conteudos_visualizacao,
    listar_comentarios,
    listar_comentarios_por_conteudo,
    converter_segundos_para_hms,
)
from src.salvar import salvar_metricas_em_csv, salvar_contagem_por_tipo, salvar_top5

# üì• Pasta de sa√≠da
pasta_saida = "outputs/"

# üì¶ Pipeline inicial
print("Limpando dados...")
dados_limpos = pipeline_limpeza()

print("Estruturando dados...")
dados_estruturados = estruturar_dados(dados_limpos)

print("Calculando m√©tricas...")
metricas_interacoes = total_interacoes_por_conteudo(dados_estruturados)
metricas_tipos = contagem_por_tipo(dados_estruturados)
metricas_tempo_total = tempo_total_visualizacao(dados_estruturados)
metricas_media_tempo = media_tempo_visualizacao(dados_estruturados)
top5 = top5_conteudos_visualizacao(dados_estruturados)

#Criando pasta Outputs
criando_pasta = criar_pasta



# -----------------------------
# üñ•Ô∏è Menu Interativo
# -----------------------------
print("\n---------------------------")
print("Sistema de Intera√ß√µes GloboTech")
print("---------------------------")

while True:
    print("\nMenu de op√ß√µes:")
    print("1. Visualizar m√©tricas de intera√ß√µes por conte√∫do")
    print("2. Visualizar contagem por tipo de intera√ß√£o")
    print("3. Visualizar tempo total de visualiza√ß√£o por conte√∫do")
    print("4. Visualizar m√©dia de tempo de visualiza√ß√£o por conte√∫do")
    print("5. Visualizar top 5 de conte√∫dos com mais tempo de visualiza√ß√£o")
    print("6. Visualizar coment√°rios de um conte√∫do espec√≠fico")
    print("7. Visualizar total de coment√°rios por conte√∫do")
    print("8. Salvar m√©tricas em CSV")
    print("9. Sair")

    opcao = input("Digite a op√ß√£o desejada: ")

    if opcao == "1":
        print("\nüìä M√©tricas de intera√ß√µes por conte√∫do: \n")
        for conteudo, metrica in metricas_interacoes.items():
            nome_conteudo = metrica["nome_conteudo"]
            print(
                f"üì∫ {conteudo} - {nome_conteudo}: {metrica['total_interacoes']} intera√ß√µes"
            )

    elif opcao == "2":
        print("\n Contagem por tipo de intera√ß√£o: \n")
        for id_conteudo, info in metricas_tipos.items():
            print(f"‚û°Ô∏è  {info['nome_conteudo']}")
            for tipo, contagem in info["contagem_por_tipo"].items():
                if tipo == "view_start":
                    print(f"  üëÄ  {tipo}: {contagem}")
                elif tipo == "like":
                    print(f"  ‚ù§Ô∏è   {tipo}: {contagem}")
                elif tipo == "comment":
                    print(f"  üí¨  {tipo}: {contagem}")
                elif tipo == "share":
                    print(f"  ü§ù  {tipo}: {contagem}")
            print("---------------------------------------")

    elif opcao == "3":
        print("\n‚è±Ô∏è Tempo total de visualiza√ß√£o por conte√∫do: \n")
        for conteudo, metrica in metricas_tempo_total.items():
            tempo_formatado = converter_segundos_para_hms(
                metrica["tempo_total_visualizacao"]
            )
            nome_conteudo = metrica["nome_conteudo"]
            print(f"üì∫ {conteudo} - {nome_conteudo}: {tempo_formatado}")

    elif opcao == "4":
        print("\n‚è±Ô∏è M√©dia de tempo de visualiza√ß√£o por conte√∫do: \n")
        for conteudo, metrica in metricas_media_tempo.items():
            nome_conteudo = metrica["nome_conteudo"]
            tempo_formatado = converter_segundos_para_hms(
                metrica["media_tempo_visualizacao"]
            )
            print(f"üì∫ {conteudo} - {nome_conteudo}: {tempo_formatado}")

    elif opcao == "5":
        print("\nüèÜ Top 5 de conte√∫dos com mais tempo de visualiza√ß√£o: \n")
        for conteudo, info in top5:
            tempo_formatado = converter_segundos_para_hms(
                info["tempo_total_visualizacao"]
            )
            print(f"üì∫ {info['nome_conteudo']} - {tempo_formatado}")

    elif opcao == "6":
        id_conteudo = input("Digite o ID do conte√∫do que deseja ver os coment√°rios: \n")
        try:
            id_conteudo = int(id_conteudo)
            comentarios = listar_comentarios(id_conteudo, dados_estruturados)
            if comentarios:
                print(
                    f"\nüí¨ Coment√°rios do conte√∫do {id_conteudo} - {dados_estruturados[id_conteudo]['nome_conteudo']}:"
                )
                for comentario in comentarios:
                    print(f"‚û°Ô∏è  {comentario}")
            else:
                print("‚ùå Nenhum coment√°rio encontrado para este conte√∫do.")
        except ValueError:
            print("‚ùå ID inv√°lido. Digite um n√∫mero inteiro.")

    elif opcao == "7":
        print("\nüí¨ Total de coment√°rios por conte√∫do: \n")
        comentarios_por_conteudo = listar_comentarios_por_conteudo(dados_estruturados)
        for conteudo, info in comentarios_por_conteudo.items():
            comentarios = info["comentarios"]
            print(f"Coment√°rios do conte√∫do {conteudo}: {info['nome_conteudo']}")
            print(f"Total de coment√°rios: {len(comentarios)}")
            print()

    elif opcao == "8":
        print("üíæ Salvando m√©tricas em CSV...")
        salvar_metricas_em_csv(
            pasta_saida + "metricas_total_interacoes.csv",
            metricas_interacoes,
            ["total_interacoes"],
        )
        salvar_metricas_em_csv(
            pasta_saida + "metricas_tempo_total.csv",
            metricas_tempo_total,
            ["tempo_total_visualizacao"],
        )
        salvar_metricas_em_csv(
            pasta_saida + "metricas_media_tempo.csv",
            metricas_media_tempo,
            ["media_tempo_visualizacao"],
        )
        salvar_contagem_por_tipo(
            pasta_saida + "metricas_contagem_por_tipo.csv", metricas_tipos
        )
        salvar_top5(pasta_saida + "metricas_top5_visualizacao.csv", top5)
        print("‚úÖ M√©tricas salvas na pasta outputs/")

    elif opcao == "9":
        print("üëã Saindo do sistema. At√© logo! \n")
        break

    else:
        print("‚ùå Op√ß√£o inv√°lida. Tente novamente.")
    print("\n---------------------------")
